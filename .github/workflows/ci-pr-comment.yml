name: CI PR Build Download Comment

on:
  workflow_run:
    workflows: [CI]
    types:
      - completed
    branches-ignore:
      - '_archived__**'
    paths-ignore:
      - '**/README.md'

permissions:
  actions: read
  pull-requests: write

jobs:
  precheck:
    name: Check if workflow needs to execute
    runs-on: ubuntu-latest
    outputs:
      skipCI: ${{ steps.checkciskip.outputs.result }}
    if: github.event.workflow_run.conclusion == 'success' || github.event.workflow_run.event == 'pull_request' || github.event.workflow_run.event == 'pull_request_target'
    steps:
      - name: Check Result
        id: checkciskip
        env:
          COMMIT_API: ${{ github.event.repository.commits_url }}
          GH_GH: ${{ toJson(github) }}
          FROM_CI_EVENT: ${{ github.event.workflow_run.event }}
          PR_HEADBRANCH: ${{ github.event.workflow_run.head_branch }}
          PR_HEADSHA: ${{ github.event.workflow_run.head_sha }}
          PR_HEADMSG: ${{ github.event.workflow_run.head_commit.message }}
          PR_NUM: ${{ github.event.workflow_run.pull_requests[0].number }}
          PR_URL: ${{ github.event.workflow_run.pull_requests[0].url }}
          PR_RUNID: ${{ github.event.workflow_run.id }}
          PR_CHECKID: ${{ github.event.workflow_run.check_suite_id }}
        run: |
          echo "PR Run ID                        : $PR_RUNID"
          echo "From CI Event                    : $FROM_CI_EVENT"
          echo "PR Number                        : $PR_NUM"
          echo "PR URL                           : $PR_URL"
          echo "Head Branch Ref                  : $PR_HEADBRANCH"
          echo "PR Head Commit SHA               : $PR_HEADSHA"
          SKIP_A=$([[ "$PR_HEADBRANCH" == l10n_* ]] && echo true || echo false)
          echo "Skip if branch starts with l10n_ : $SKIP_A"
          echo "Commit Message:"
          echo "$PR_HEADMSG"
          EXP_SKIP="\[ci skip]"
          SKIP_B=$([[ "$PR_HEADMSG" =~ $EXP_SKIP ]] && echo true || echo false)
          echo "Skip via Commit Msg              : $SKIP_B"
          REPO_SKIP="/repos/Cookie-AutoDelete/Cookie-AutoDelete"
          SKIP_C=$([[ "$PR_URL" =~ $REPO_SKIP ]] && echo false || echo true)
          echo "Skip as PR not in main Repo      : $SKIP_C"
          RES=$([[ $SKIP_A == true || $SKIP_B == true || $SKIP_C = true ]] && echo true || echo false)
          echo "Skip CI                          : $RES"
          echo "result=$RES" >> $GITHUB_OUTPUT
  upload_coverage:
    name: Coverage Uploads
    runs-on: ubuntu-latest
    needs: precheck
    if: needs.precheck.outputs.skipCI == 'false'
    steps:
      - name: Checkout Specific REF Commit
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
      - name: Download coverage artifact
        id: artCov
        uses: actions/github-script@v6
        with:
          script: |
            let runArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id,
            });
            let covArtifact = runArtifacts.data.artifacts.filter((a) => {
              return a.name === 'coverage'
            })[0];
            if (!covArtifact) {
              console.log(`No coverage artifact found in workflow run ${context.payload.workflow_run.id}`);
              return;
            }
            let download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: covArtifact.id,
              archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/coverage.zip', Buffer.from(download.data));
            return true;
      - name: Unzip coverage artifact and List files
        if: steps.artCov.outputs.result == 'true'
        run: |
          unzip coverage.zip -d coverage
          ls -ranl
      - name: Codecov.io Coverage Upload
        id: codecov_action
        uses: codecov/codecov-action@v3
        if: steps.artCov.outputs.result == 'true'
        with:
          fail_ci_if_error: true
          directory: ./coverage/
          token: ${{ secrets.CODECOV_TOKEN }}
          override_branch: ${{ github.event.workflow_run.head_branch }}
          override_pr: ${{ github.event.workflow_run.pull_requests[0].number }}
          override_commit: ${{ github.event.workflow_run.head_sha }}
      - name: Coveralls.io Coverage Upload
        id: coveralls_action
        uses: coverallsapp/github-action@v2.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          git-branch: ${{ github.event.workflow_run.head_branch }}
          git-commit: ${{ github.event.workflow_run.head_sha }}
  download_comment:
    name: Generate PR Build Download Comment
    runs-on: ubuntu-latest
    needs: precheck
    if: needs.precheck.outputs.skipCI == 'false'
    steps:
      - name: 'Generate PR Run Info from previous workflow'
        id: workflowArtifacts
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id,
            });
            if (allArtifacts.data.total_count < 2) {
              console.log(`Artifact count is ${allArtifacts.data.total_count}. Not generating comment.`);
              return;
            }
            let buildArtifacts = allArtifacts.data.artifacts.filter((a) => {
              return a.name.indexOf('Cookie-AutoDelete') !== -1 && !a.expired
            }).map((a) => {
              return {
                id: a.id,
                name: a.name,
                created_at: a.created_at,
                expires_at: a.expires_at,
                artifact_url: `${context.payload.workflow_run.head_repository.html_url}/suites/${context.payload.workflow_run.check_suite_id}/artifacts/${a.id}`,
              }
            });
            console.log(buildArtifacts);
            let pr_body = `## Pull Request Build: ${context.payload.workflow_run.id}\n\n- based on latest commit: ${context.payload.workflow_run.head_sha}\n\n`;
            pr_body += "Unsigned webextension builds for testing is ready for download!\nThese test builds are only kept for *up to 90 days* from the date of this post.\nIt is strongly recommended to use a fresh profile for testing these builds to prevent any kind of modifications to existing data.\n\n";
            pr_body += "### Clickable Download Links (BETA)\n\n";
            pr_body += "**NOTE:  Ensure you are already signed into GitHub before clicking on the links below.**\n";
            pr_body += `| Filename | Created Timestamp | Expiry Timestamp |\n| --- | --- | --- |\n`;
            for (const a of buildArtifacts) {
              pr_body += `| [${a.name}](${a.artifact_url}) | ${a.created_at.replace('T', ' @ ')} UTC | ${a.expires_at.replace('T', ' @ ')} UTC |\n`
            }
            pr_body += "\nPlease note that if the link(s) above returns a 404 Not Found, you may not be signed into GitHub, or it may have expired and/or manually removed before expiry date.  This post does not get updated if artifacts are removed.  Try the alternate method below if the link(s) above do not work."
            pr_body += "\n\n### To Generate Download Links (Alternate Method if above links do not work for some reason)\n\n- `/get-build` for the latest commit build.\n";
            pr_body += `- \`get-build ${context.payload.workflow_run.id}\` for this specific commit ${ context.payload.workflow_run.head_sha } build.\n\n`;
            pr_body += "---\n\n*When new command comment is posted, please allow a few seconds for the command to be received and processed.*\n- :eyes: indicates that command has been received.\n- :rocket: indicates that command has been sent for further processing.\n- :tada: indicates that command has been executed.  Expect a new comment with the result shortly.\n\n";
            pr_body += "*Due to API limitations, generated links from the alternate method will only be valid for one minute!*"
            return pr_body;
      - name: Hide now-outdaded PR Build Comment
        if: steps.workflowArtifacts.outputs.result != null && steps.workflowArtifacts.outputs.result != '' && steps.workflowArtifacts.outputs.result != 'undefined'
        uses: kanga333/comment-hider@v0.4.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          issue_number: ${{ github.event.workflow_run.pull_requests[0].number }}
      - name: Create PR Build Comment
        if: steps.workflowArtifacts.outputs.result != null && steps.workflowArtifacts.outputs.result != '' && steps.workflowArtifacts.outputs.result != 'undefined'
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.workflow_run.pull_requests[0].number }}
          body: ${{ steps.workflowArtifacts.outputs.result }}
          reactions: heart

