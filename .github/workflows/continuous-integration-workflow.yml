name: Node.js CI Tests

on:
  push:
    branches-ignore:
      - '_archived__**'
  pull_request:
    branches-ignore:
      - '_archived__**'
    paths-ignore:
      - '**/README.md'

jobs:
  info:
    name: Info
    runs-on: ubuntu-latest
    steps:
      - name: Info
        env:
          GH_API: ${{ github.event.pull_request.base.repo.url }}
        run: |
          echo "$GITHUB_RUN_ID"
          echo "$GH_API"
          echo "$GH_API/actions/runs/$GITHUB_RUN_ID/artifacts"
  all_jobs:
    name: Tests, Builds, Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Cache Node.js
        uses: actions/cache@v1
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}
      - name: Install dependencies (npm ci)
        run: npm ci
      - name: Run Tests
        run: npm run test -- --verbose
      - name: Run Lint
        run: npm run lint
      - name: Run Build
        if: ("${{github.event_name}}" == "pull_request" )
        run: npm run build
      - name: Archive All unsigned Build Artifacts
        if: ("${{github.event_name}}" == "pull_request" )
        uses: actions/upload-artifact@v2
        with:
          name: builds
          path: builds
      - name: Extract zip builds for individual artifact upload and usage.
        if: ("${{github.event_name}}" == "pull_request" )
        id: extbuilds
        run: |
          for i in *.zip; do echo "${i%.zip}"; done | xargs -I fn unzip fn.zip -d fn
          echo "::set-output name=ffdir::$(ls -d *Firefox)"
          echo "::set-output name=crdir::$(ls -d *Chrome)"
        working-directory: ./builds
      - name: Artifact for Mozilla Firefox build
        if: ("${{github.event_name}}" == "pull_request" )
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.extbuilds.outputs.ffdir }}
          path: builds/${{ steps.extbuilds.outputs.ffdir }}
      - name: Artifact for Google Chrome build
        if: ("${{github.event_name}}" == "pull_request" )
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.extbuilds.outputs.crdir }}
          path: builds/${{ steps.extbuilds.outputs.crdir }}
      - name: Archive Code Coverage Results
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage
      - name: Codecov.io Coverage upload
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
          file: ./coverage/*
          token: ${{ secrets.CODECOV_TOKEN }} # Optional as it is open source repo
      - name: Coveralls.io Coverage Upload
        uses: coverallsapp/github-action@v1.1.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create PR Comment
        if: ("${{github.event_name}}" == "pull_request" )
        uses: thollander/actions-comment-pull-request@master
        with:
          message: 'Automated Dev Build with commit: ${{ github.event.after }} after merging base with SHA: ${{ github.sha }}
        will be made available soon.<br />Comment with `!cad-dev-download` to generate download links.
        These links will expire within a minute of generation.'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
