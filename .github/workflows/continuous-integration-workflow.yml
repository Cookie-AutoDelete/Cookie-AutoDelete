name: CI

on:
  push:
    branches-ignore:
      - '_archived__**'
  pull_request:
    branches-ignore:
      - '_archived__**'
    paths-ignore:
      - '**/README.md'

jobs:
  all_jobs:
    name: Tests, Builds, Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install dependencies (npm ci)
        run: npm ci
      - name: Run Tests
        run: npm run test -- --verbose
      - name: Run Lint
        run: npm run lint
      - name: Run Build
        run: npm run build
      - name: Archive Code Coverage Results
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage
      - name: Codecov.io Coverage upload
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
          file: ./coverage/*
          token: ${{ secrets.CODECOV_TOKEN }} # Optional as it is open source repo
      - name: Coveralls.io Coverage Upload
        uses: coverallsapp/github-action@v1.1.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract zip builds for individual artifact upload
        if: github.event_name == 'pull_request'
        id: extbuilds
        run: |
          for i in *.zip; do echo "${i%.zip}"; done | xargs -I fn unzip fn.zip -d fn
          echo "::set-output name=ffdir::$(ls -d *Firefox)"
          echo "::set-output name=crdir::$(ls -d *Chrome)"
        working-directory: ./builds
      - name: Upload Artifact for Mozilla Firefox Build
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.extbuilds.outputs.ffdir }}
          path: builds/${{ steps.extbuilds.outputs.ffdir }}
      - name: Upload Artifact for Google Chrome Build
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.extbuilds.outputs.crdir }}
          path: builds/${{ steps.extbuilds.outputs.crdir }}
      - name: Create PR Build Comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v1.4.2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## Pull Request Build: ${{ github.run_id }}

            - based on latest commit: ${{ github.event.after }}

            Unsigned webextension for testing is ready for download!
            These test builds are only kept for up to 90 days from the date of this post.

            **Comment with `/get-build runid=${{ github.run_id }}` to generate download links.**

            *Due to API limitations, and for security, generated links will only be valid for one minute!*
          reactions: eyes, rocket
