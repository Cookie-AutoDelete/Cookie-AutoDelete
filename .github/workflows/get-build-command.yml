name: get-build-command
on:
  repository_dispatch:
    types: [get-build-command]

jobs:
  getBuild:
    name: Get Build for PR
    runs-on: ubuntu-latest
    steps:
      - name: List Data
        env:
          GH_GH: ${{ toJson(github) }}
        run: |
          printenv
      - name: Artifact URL Info
        id: arts
        env:
          GH_API: ${{ github.event.client_payload.github.payload.repository.url }}
          GH_RUNID: ${{ github.event.client_payload.slash_command.arg1 }}
          GH_BRANCH: ${{ github.event.client_payload.pull_request.head.ref }}
          GH_TOKEN: ${{ github.token }}
        run: |
          API_RUNS="$GH_API/actions/runs"
          # Fetch All successful Pull Request workflow runs from branch.
          echo "curl -s $API_RUNS?event=pull_request&status=success&branch=$GH_BRANCH"
          curl -s "$API_RUNS?event=pull_request&status=success&branch=$GH_BRANCH" > curl_latest.json
          RUNS=($(cat curl_latest.json | jq -r '.workflow_runs[].id'))
          # Check if RunID, if given, is in the list above.
          echo "Run ID from Arg1:  $GH_RUNID"
          if [[ -n $GH_RUNID && (! " ${RUNS[@]} " =~ " ${GH_RUNID} ") ]]; then
            echo "Run ID $GH_RUNID not in list of successful runs for that branch"
            echo ${RUNS[@]}
            echo "::set-output name=result::FAILED"
            echo "::set-output name=message::Run ID **$GH_RUNID** was not found in the list of successful runs of branch **$GH_BRANCH**."
            exit 0
          fi
          # Use latest RunID from list above if none was given.
          if [[ -z $GH_RUNID ]]; then
            echo "No Run ID Given.  Attempting to grab latest run from this PR Branch $GH_BRANCH"
            MSG=$(cat curl_latest.json | jq -r '.message // empty');
            if [[ -n "$MSG" ]]; then
              echo "Github returned Error from above query:  $MSG"
              cat curl_latest.json
              echo "::set-output name=result::FAILED"
              echo "::set-output name=message::Error when trying to fetch latest successful runs from branch $GH_BRANCH:  $MSG"
              exit 0
            fi
            if [[ $(cat curl_latest.json | jq -r '.total_count') -eq 0 ]]; then
              echo "No successful PR runs were made from branch $GH_BRANCH yet."
              echo "::set-output name=result::FAILED"
              echo "::set-output name=message::No Successful PR Runs were made from branch $GH_BRANCH yet."
              exit 0
            fi
            GH_RUNID=$(cat curl_latest.json | jq -r '.workflow_runs[0].id')
            echo "Using RunID of $GH_RUNID parsed from branch $GH_BRANCH runs"
          fi
          # Fetch artifacts for workflow RunID given.
          echo "curl -s $API_RUNS/$GH_RUNID/artifacts"
          curl -s "$API_RUNS/$GH_RUNID/artifacts" > curl_artifacts.json
          MSG=$(cat curl_artifacts.json | jq -r '.message // empty');
          if [[ -n "$MSG" ]]; then
            echo "Github returned Error from above query:  $MSG"
            cat curl_artifacts.json
            echo "::set-output name=result::FAILED"
            echo "::set-output name=message::Error when trying to fetch artifacts from $GH_RUNID:  $MSG"
            exit 0
          fi
          # Parse artifacts
          ARTS=($(cat curl_artifacts.json | jq -r '[.artifacts[] | select(.name|startswith("Coo")) | select(.expired == false) | {name, archive_download_url}] | to_entries | map("\(.value)") | reduce .[] as $item(" "; . + ($item) + " ")'))
          echo ${ARTS[1]}
          # Chrome:  echo "${ARTS[0]}"
          # Firefox: echo "${ARTS[1]}"
          MDR=""
          for i in "${ARTS[@]}"; do
            echo $i
            ADL=$(echo $i | jq -r '.archive_download_url')
            echo "ADL: $ADL"
            ADN=$(jq -r '.name' <<< $i)
            echo "ADN: $ADN"
            DL=$(curl -LIv -u octocat:$GH_TOKEN $ADL)
            echo "DL: $DL"
          done
          echo "::set-output name=result::SUCCESS"
      - name: Reply Error in PR
        if: steps.arts.outputs.result == 'FAILED'
        uses: peter-evans/create-or-update-comment@v1.4.2
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN_WORKFLOW }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
          body: |
            @${{ github.event.client_payload.github.actor }}
            The `get-build` command did not execute successfully.  Additional information, if any, will be noted below.

            ${{ steps.arts.outputs.message }}
          reactions: confused
      - name: Create comment in PR
        if: steps.arts.outputs.result == 'SUCCESS'
        uses: peter-evans/create-or-update-comment@v1.4.2
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN_WORKFLOW }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
          body: |
            @${{ github.event.client_payload.github.actor }}

            ### Get-build command was executed.

            This is a work in progress.
            See Action Workflow logs for output.
          reactions: hooray
